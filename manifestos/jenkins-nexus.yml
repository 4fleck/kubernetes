
apiVersion: v1
kind: Namespace
metadata:
  name: jnk

---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: multihost-ingress
  namespace: jnk
  # annotations:
  #    nginx.ingress.kubernetes.io/rewrite-target: /
  #   nginx.ingress.kubernetes.io/backend-protocol: HTTP/2
spec:
  ingressClassName: nginx
  rules:
  - host: admin.jenkins.etm.corp
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
            service:
              name: jenkins-service
              port:
                number: 8080
  - host: admin.nexus.etm.corp
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
            service:
              name: nexus-sevice
              port:
                number: 8081

---

apiVersion: v1
kind: Service
metadata: 
  name: jenkins-service
  namespace: jnk
spec:
  selector: 
    app: jenkins
  ports: 
    - protocol: TCP
      name: http-port
      port: 8080
      targetPort: 8080
    - protocol: TCP
      name: jnlp-port
      port: 50000
      targetPort: 50000
  

---

apiVersion: v1
kind: Service
metadata: 
  name: nexus-sevice
  namespace: jnk
spec:
  selector: 
    app: sonatype-nexus
  ports: 
    - protocol: TCP
      name: nexus-port1
      port: 8081
      targetPort: 8081
    - protocol: TCP
      name: nexus-port3
      port: 8083
      targetPort: 8083

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jnk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      # securityContext:
      #       fsGroup: 1000 
      #       runAsUser: 1000
      # serviceAccountName: jenkins-admin
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          resources:
            limits:
              memory: "5Gi"
              cpu: "2000m"
            requests:
              memory: "500Mi"
              cpu: "500m"
          # env:
          #   - name: JAVA_OPTS
          #     value: -Djenkins.install.runSetupWizard=false
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
          # livenessProbe:
          #   httpGet:
          #     path: "/login"
          #     port: 8080
          #   initialDelaySeconds: 90
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 5
          # readinessProbe:
          #   httpGet:
          #     path: "/login"
          #     port: 8080
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-home
          emptyDir: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus
  namespace: jnk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonatype-nexus
  template:
    metadata:
      labels:
        app: sonatype-nexus
    spec:
      containers:
        - name: nexus
          image: sonatype/nexus3
          ports:
            - name: nexus-port1
              containerPort: 8081
            - name: nexus-port3
              containerPort: 8083
          volumeMounts:
            - name: nexus-data
              mountPath: /nexus-data
      volumes:
        - name: nexus-data
          emptyDir: {}
